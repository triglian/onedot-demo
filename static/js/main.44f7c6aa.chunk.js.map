{"version":3,"sources":["data/dictionaryData.js","reducers/dictionaries.js","constants/ActionTypes.js","reducers/validatedDictionary.js","utils/index.js","validation/index.js","constants/ErrorTypes.js","reducers/index.js","actions/index.js","DictionaryDeleteDialog.js","DictionariesTableRow.js","DictionariesTable.js","DictionariesListPage.js","HomeButton.js","SeverityErrorsList.js","constants/SeverityTypes.js","CreateDictionaryForm.js","DictionaryCreatePage.js","DictionaryRow.js","DictionaryRows.js","DictionaryViewPage.js","EditDictionaryForm.js","DictionaryEditPage.js","NotFoundPage.js","App.js","Root.js","index.js","storage/localStorage.js"],"names":["dictionaryData","uid","name","createdAt","Date","lastModifiedAt","rows","domain","range","dictionaries","state","arguments","length","undefined","action","type","Object","toConsumableArray","concat","payload","map","dictionary","index","objectSpread","filter","newDictionary","errorsPerRow","errors","forEach","err","indexA","push","indexB","console","log","consistencyErrorsPerRow","rowA","idxA","slice","rowB","idxB","validateDictionaryConsistency","validationErrors","combineReducers","validatedDictionary","addDictionary","validateDictionary","clearValidatedDictionary","updateDictionary","deleteDictionary","DictionaryDeleteDialog","withRouter","_ref","isOpen","closeDialog","history","react_default","a","createElement","Dialog_default","open","onClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","onClick","color","autoFocus","connect","dispatch","bindActionCreators","DictionariesTableRow","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isDeleteDialogOpen","clearTimeout","timeoutId","setState","_this2","setTimeout","TableRow_default","key","row","TableCell_default","component","scope","idx","dist_default","format","toISOString","IconButton_default","Link","to","aria-label","className","classes","defaultTableButton","Visibility_default","Edit_default","openDialog","bind","Delete_default","src_DictionaryDeleteDialog","Component","withStyles","theme","backgroundColor","palette","primary","contrastText","margin","spacing","unit","root","width","marginTop","overflowX","table","minWidth","Paper_default","Table_default","TableHead_default","TableBody_default","src_DictionariesTableRow","newDictionaryButton","position","bottom","right","src_DictionariesTable","Tooltip_default","title","variant","Add_default","homeButton","Icon_default","errorMessages","errorsToSeverities","severityClasses","severityListItem","padding","listStyle","borderRadius","severity0","severity1","severity2","severity3","errorItems","Array","isArray","DictionarySchema","Yup","shape","of","min","required","CreateDictionaryForm","_this$props","cErrorsPerRow","formik_esm","initialValues","validationSchema","onSubmit","values","formikBag","uniqid","time","render","touched","handleChange","handleBlur","isSubmitting","TextField_default","label","textField","value","onChange","onBlur","arrayHelpers","hasRowArrayError","error","getIn","helperTextForRowArrayError","RowArrayErrors","severityErrorContainer","src_SeverityErrorsList","leftMargin","helperText","button","remove","disabled","formButton","fontSize","marginLeft","marginRight","HomeButton","src_CreateDictionaryForm_0","DictionaryRow","isDisplayingConsistencyErrors","cErrors","src_DictionaryRow","DictionaryViewPage","_this3","validateButton","defaultButton","src_DictionaryRows","ownProps","_","find","match","params","dictionaryid","EditDictionaryForm","createAt","src_EditDictionaryForm_0","NotFoundPage","App","Switch","Route","exact","path","DictionariesListPage","DictionaryCreatePage","DictionaryEditPage","Root","store","es","BrowserRouter","basename","process","createStore","reducer","serializedState","localStorage","getItem","JSON","parse","loadState","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","src_Root","document","getElementById"],"mappings":"qUAiCeA,EA/BQ,CACrB,CACEC,IAAK,WACLC,KAAM,uBACNC,UAAW,IAAIC,KAAK,8BACpBC,eAAgB,IAAID,KAAK,8BACzBE,KAAM,CACJ,CACEL,IAAK,WACLM,OAAQ,YACRC,MAAO,aAET,CACEP,IAAK,WACLM,OAAQ,kBACRC,MAAO,SAET,CACEP,IAAK,WACLM,OAAQ,gBACRC,MAAO,aCGAC,EAlBM,WAAoC,IAAnCC,EAAmCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3BX,EAAgBc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAQC,EAAOC,MACb,ICT0B,iBDUxB,OAAOC,OAAAC,EAAA,EAAAD,CAAIN,GAAXQ,OAAA,CAAkBJ,EAAOK,UAC3B,ICR6B,oBDS3B,OAAOT,EAAMU,IAAI,SAACC,EAAYC,GAC5B,OAAID,EAAWpB,MAAQa,EAAOK,QAAQlB,IAC7Be,OAAAO,EAAA,EAAAP,CAAA,GAAIF,EAAOK,SAEbE,IAEX,ICd6B,oBDe3B,OAAOX,EAAMc,OAAO,SAAAH,GAAU,OAAIA,EAAWpB,MAAQa,EAAOK,QAAQlB,MACtE,QACE,OAAOS,IEDEe,EAbO,WAAwB,IAAvBf,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAQC,EAAOC,MACb,IDR+B,sBCS7B,IACMW,ECX2B,SAACC,EAAQf,GAE9C,IADA,IAAIc,EAAe,GACbd,KAAUc,EAAad,GAAU,GAOvC,OALAe,EAAOC,QAAS,SAAAC,GACdH,EAAaG,EAAIC,QAAQC,KAAKF,GAC9BH,EAAaG,EAAIG,QAAQD,KAAKF,KAEhCI,QAAQC,IAAIR,GACLA,EDEkBS,CEHkB,SAAA7B,GAC3C,IAAMqB,EAAS,GA8Bf,OA7BArB,EAAKsB,QAAQ,SAACQ,EAAMC,GACdA,EAAO/B,EAAKM,OAAS,GACvBN,EAAKgC,MAAMD,EAAO,GAAGT,QAAQ,SAACW,EAAMC,GAE9BJ,EAAK7B,SAAWgC,EAAKhC,QAAU6B,EAAK5B,QAAU+B,EAAK/B,OACrDmB,EAAOI,KAAK,CACVhB,KChBqB,oBDiBrBe,OAAQO,EACRL,OAAQK,EAAOG,EAAO,IAKtBJ,EAAK7B,SAAWgC,EAAKhC,QAAU6B,EAAK5B,QAAU+B,EAAK/B,OACrDmB,EAAOI,KAAK,CAAEhB,KCvBA,WDuBgBe,OAAQO,EAAML,OAAQK,EAAOG,EAAO,IAIhEJ,EAAK7B,SAAWgC,EAAK/B,OAAS4B,EAAK5B,QAAU+B,EAAKhC,QACpDoB,EAAOI,KAAK,CAAEhB,KC3BC,YD2BgBe,OAAQO,EAAML,OAAQK,EAAOG,EAAO,IAIjEJ,EAAK5B,QAAU+B,EAAKhC,QACtBoB,EAAOI,KAAK,CAAEhB,KC/BC,YD+BgBe,OAAQO,EAAML,OAAQK,EAAOG,EAAO,QAKpEb,EF7BYc,CAA8B3B,EAAOK,QAAQb,MACPQ,EAAOK,QAAQb,KAAKM,QACzE,OAAOI,OAAAO,EAAA,EAAAP,CAAA,GAAIF,EAAOK,QAAlB,CAA2BuB,iBAAkBhB,IAC/C,IDXsC,6BCYpC,MAAO,GACT,QACE,OAAOhB,IIZEiC,cAAgB,CAC7BlC,eACAmC,4VCJWC,GAAgB,SAAA1B,GAAO,MAAK,CAAEJ,KNFb,iBMEyCI,YAC1D2B,GAAqB,SAAA3B,GAChC,MAAQ,CAAEJ,KNHuB,sBMGUI,YAEhC4B,GAA2B,SAAA5B,GAAO,MAAK,CAAEJ,KNJZ,+BMK7BiC,GAAmB,SAAA7B,GAAO,MAAK,CAAEJ,KNJb,oBMI4CI,YAChE8B,GAAmB,SAAA9B,GAAO,MAAK,CAAEJ,KNJb,oBMI4CI,qHCgBvE+B,GAAyBC,YAC7B,SAAAC,GAAoE,IAAjEC,EAAiED,EAAjEC,OAAQC,EAAyDF,EAAzDE,YAAaC,EAA4CH,EAA5CG,QAASlC,EAAmC+B,EAAnC/B,WAAY4B,EAAuBG,EAAvBH,iBAC7C,OACEO,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,GAAAF,EAAD,CACGG,KAAMP,EACNQ,QAASP,EACTQ,kBAAgB,qBAChBC,mBAAiB,4BAEjBP,EAAAC,EAAAC,cAACM,GAAAP,EAAD,CAAaQ,GAAG,sBAAsB,sBACtCT,EAAAC,EAAAC,cAACQ,GAAAT,EAAD,KACED,EAAAC,EAAAC,cAACS,GAAAV,EAAD,CAAmBQ,GAAG,4BAAtB,+EAIFT,EAAAC,EAAAC,cAACU,GAAAX,EAAD,KACED,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQa,QAAS,WACfrB,EAAiB5B,GACjBiC,IACAC,EAAQxB,KAAK,MACZwC,MAAM,aAJT,UAOAf,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQa,QAAShB,EAAaiB,MAAM,UAAUC,WAAS,GAAvD,eAUKC,eACb,KA/CyB,SAAAC,GAAQ,OACjCC,YACE,CACE1B,qBAEFyB,IAyCWD,CAGbvB,yBCzCI0B,eACJ,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAA9D,OAAA+D,EAAA,EAAA/D,CAAAgE,KAAAJ,IAChBE,EAAA9D,OAAAiE,EAAA,EAAAjE,CAAAgE,KAAAhE,OAAAkE,EAAA,EAAAlE,CAAA4D,GAAAO,KAAAH,KAAMH,KACDnE,MAAQ,CACT0E,oBAAoB,GAHRN,sFAQhBO,aAAaL,KAAKM,gDAIlBN,KAAKO,SAAS,CAACH,oBAAoB,0CAGvB,IAAAI,EAAAR,KAGZA,KAAKM,UAAYG,WAAW,WACzBD,EAAKD,SAAS,CAACH,oBAAoB,KAClC,oCAIJ,OACE5B,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CAAUkC,IAAKX,KAAKH,MAAMe,IAAI3F,KAC5BuD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAWqC,UAAU,KAAKC,MAAM,OAC7Bf,KAAKH,MAAMmB,KAEdxC,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KAAYuB,KAAKH,MAAMe,IAAI3F,KAC3BuD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KAAYuB,KAAKH,MAAMe,IAAI1F,MAC3BsD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KACED,EAAAC,EAAAC,cAACuC,GAAAxC,EAAD,CAAQyC,OAAO,uBACZlB,KAAKH,MAAMe,IAAIzF,UAAUgG,gBAG9B3C,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KACED,EAAAC,EAAAC,cAACuC,GAAAxC,EAAD,CAAQyC,OAAO,uBACZlB,KAAKH,MAAMe,IAAIvF,eAAe8F,gBAGnC3C,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KACED,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACEqC,UAAWO,IACXC,GAAE,SAAApF,OAAW8D,KAAKH,MAAMe,IAAI3F,KAC5BsG,aAAW,OACXC,UAAWxB,KAAKH,MAAM4B,QAAQC,oBAE9BlD,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,OAEFD,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACEqC,UAAWO,IACXC,GAAE,SAAApF,OAAW8D,KAAKH,MAAMe,IAAI3F,KAC5BsG,aAAW,OACXC,UAAWxB,KAAKH,MAAM4B,QAAQC,oBAE9BlD,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,OAEFD,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACE8C,aAAW,SACXC,UAAWxB,KAAKH,MAAM4B,QAAQC,mBAC9BpC,QAASU,KAAK6B,WAAWC,KAAK9B,OAE9BxB,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,MACAD,EAAAC,EAAAC,cAACsD,GAAD,CACE3F,WAAY2D,KAAKH,MAAMe,IACvBvC,OAAQ2B,KAAKtE,MAAM0E,mBACnB9B,YAAa0B,KAAK1B,YAAYwD,KAAK9B,kBApEdiC,aAiFpBC,wBAxFA,SAAAC,GAAK,MAAK,CACvBT,mBAAoB,CAClBU,gBAAiBD,EAAME,QAAQC,QAAQC,aACvCC,OAAQL,EAAMM,QAAQC,QAqFXR,CAAmBtC,ICjDnBsC,wBAzCA,SAAAC,GAAK,MAAK,CACvBQ,KAAM,CACJC,MAAO,OACPC,UAAgC,EAArBV,EAAMM,QAAQC,KACzBI,UAAW,QAEbC,MAAO,CACLC,SAAU,OAkCCd,CA9BW,SAAA9D,GAAuB,IAApBqD,EAAoBrD,EAApBqD,QAASnG,EAAW8C,EAAX9C,KACpC,OACEkD,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CAAO+C,UAAWC,EAAQkB,MACxBnE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAO+C,UAAWC,EAAQsB,OACxBvE,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,KACED,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACED,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,UACAD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,kBACAD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,aACAD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,gBACAD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,sBACAD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,kBAGJD,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,KACGnD,EAAKc,IAAI,SAACwE,EAAKI,GACd,OACExC,EAAAC,EAAAC,cAAC2E,GAAD,CAAsBzC,IAAKA,EAAKI,IAAKA,EAAM,EAAGL,IAAKC,EAAI3F,aCKtDwE,eAnCS,SAAA/D,GAAK,MAAK,CAChCD,aAAcC,EAAMD,eAkCPgE,CAAyByC,qBA/BzB,SAAAC,GAAK,MAAK,CACvBmB,oBAAqB,CACnBC,SAAU,QACVC,OAAQ,OACRC,MAAO,UA2B6BvB,CAvBb,SAAArC,GACzB,OACErB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ8C,UAAU,cAChBhD,EAAAC,EAAAC,cAAA,mCAEFF,EAAAC,EAAAC,cAACgF,GAAD,CAAmBpI,KAAMuE,EAAMpE,eAC/B+C,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAASmF,MAAM,2BACbpF,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACEqC,UAAYO,IACZC,GAAG,UACHuC,QAAQ,MACRtE,MAAM,UACNgC,aAAW,MACXC,UAAW3B,EAAM4B,QAAQ6B,qBAEzB9E,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,gCCDKyD,wBA5BA,SAAAC,GAAK,MAAK,CACvB4B,WAAY,CACVlB,UAAW,MA0BAX,CAtBK,SAAA9D,GAAgB,IAAbqD,EAAarD,EAAbqD,QACrB,OACEjD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAASmF,MAAM,cACbpF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACEqC,UAAaO,IACbC,GAAK,IACL/B,MAAM,YACNiC,UAAWC,EAAQsC,WACnBxC,aAAW,oBAEX/C,EAAAC,EAAAC,cAACsF,GAAAvF,EAAD,6ECeFwF,GAAgB,CACtBA,kBAAmC,YACnCA,SAA0B,OAC1BA,UAA2B,QAC3BA,UAA2B,SAErBC,GAAqB,CAC3BA,kBC/CsC,EDgDtCA,SC/C6B,EDgD7BA,UC9C8B,ED+C9BA,UChD8B,GDkDxBC,GAAkB,CACxBA,EAA0C,YAC1CA,EAAiC,YACjCA,EAAkC,YAClCA,EAAkC,aAoBnBjC,wBA1DA,SAAAC,GAAK,MAAK,CACvBiC,iBAAiB,CACf5B,OAAQ,QACR6B,QAAS,UACTC,UAAW,OACXC,aAAc,OAEhBC,UAAW,CACTpC,gBAAiB,WAEnBqC,UAAW,CACTrC,gBAAiB,WAEnBsC,UAAW,CACTtC,gBAAiB,WAEnBuC,UAAW,CACTvC,gBAAiB,aAyCNF,CAlBY,SAAA9D,GAAyB,IAAtBzB,EAAsByB,EAAtBzB,OAAQ8E,EAAcrD,EAAdqD,QAE9BmD,GADWC,MAAMC,QAAQnI,GAAWA,EAAS,IACvBP,IAAI,SAACS,EAAKmE,GAAN,OAC9BxC,EAAAC,EAAAC,cAAA,MAAIiC,IAAKK,EAAKQ,UAAS,GAAAtF,OAAKuF,EAAQ0C,GAAgBD,GAAmBrH,EAAId,QAApD,KAAAG,OAA+DuF,EAAQ2C,mBAA9F,GAAAlI,OACM+H,GAAcpH,EAAId,MADxB,cAAAG,OAC0CW,EAAIC,OAAS,EADvD,KAAAZ,OAC4DW,EAAIG,OAAS,EADzE,QAIF,OACEwB,EAAAC,EAAAC,cAAA,UACGkG,KE9BDG,WAAmBC,YAAaC,MAAM,CAC1C/J,KAAM8J,YACN1J,KAAM0J,WACHE,GACCF,YAAaC,MAAM,CACjB1J,OAAQyJ,YACLG,IAAI,EAAG,mBACPC,SAAS,YACZ5J,MAAOwJ,YACJG,IAAI,EAAG,mBACPC,SAAS,eAGfA,SAAS,kBACTD,IAAI,EAAG,+BAkBNE,kMAGFrF,KAAKH,MAAM9B,4DAGL,IAAAuH,EACyEtF,KAAKH,MAA5E4B,EADF6D,EACE7D,QAAS5D,EADXyH,EACWzH,cAAeC,EAD1BwH,EAC0BxH,mBAAoBS,EAD9C+G,EAC8C/G,QAASgH,EADvDD,EACuDC,cAE7D,OACE/G,EAAAC,EAAAC,cAAC8G,GAAA,EAAD,CACEC,cAAe,CACbvK,KAAM,GACNI,KAAM,CAAC,CAAEC,OAAQ,GAAIC,MAAO,MAE9BkK,iBAAkBX,GAClBY,SAAU,SAACC,EAAQC,GACjBD,EAAO3K,IAAM6K,KAAOC,OACpBH,EAAOzK,UAAY,IAAIC,KACvBwK,EAAOvK,eAAiB,IAAID,KAC5ByC,EAAc+H,GAGdrH,EAAQxB,KAAK,MAEfiJ,OAAQ,SAAA5H,GAAA,IACNwH,EADMxH,EACNwH,OACAjJ,EAFMyB,EAENzB,OACAsJ,EAHM7H,EAGN6H,QACAC,EAJM9H,EAIN8H,aACAC,EALM/H,EAKN+H,WACAC,EANMhI,EAMNgI,aANM,OAQN5H,EAAAC,EAAAC,cAAC8G,GAAA,EAAD,KACEhH,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,YACbhD,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CACEvD,KAAK,OACLoL,MAAM,OACN9E,UAAWC,EAAQ8E,UACnBC,MAAOZ,EAAO1K,KACduL,SAAUP,EACVQ,OAAQP,EACR3D,OAAO,YAIXhE,EAAAC,EAAAC,cAAC8G,GAAA,EAAD,CACEtK,KAAK,OACL8K,OAAQ,SAAAW,GACN,IAMMC,EAAmB,SAAC1L,EAAM+K,EAAStJ,GACvC,IAAMkK,EAAQC,aAAMnK,EAAQzB,GAE5B,SADc4L,aAAMb,EAAS/K,KACb2L,IAGZE,EAA6B,SAAC7L,EAAM+K,EAAStJ,GACjD,IAAMkK,EAAQC,aAAMnK,EAAQzB,GAE5B,OADc4L,aAAMb,EAAS/K,IACb2L,EAAQA,EAAQ,IAGlC,OACErI,EAAAC,EAAAC,cAAA,WAnBqB,SAAA/B,GACrB,MAA8B,kBAAhBA,EAAOrB,KACnBkD,EAAAC,EAAAC,cAAA,WAAM/B,EAAOrB,MACX,KAiBD0L,CAAerK,GAEfiJ,EAAOtK,KAAKc,IAAI,SAACwE,EAAKtE,GAAN,OACfkC,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,WAAWb,IAAKrE,GAE7BkC,EAAAC,EAAAC,cAAA,OAAK8C,UAAWC,EAAQwF,wBACtB1B,GAAiBA,EAAcjJ,IAAUiJ,EAAcjJ,GACnDkC,EAAAC,EAAAC,cAACwI,GAAD,CAAoBvK,OAAQ4I,EAAcjJ,KAC1C,IAGNkC,EAAAC,EAAAC,cAAA,OAAK8C,UAAWC,EAAQ0F,YAAa7K,EAAQ,EAA7C,KACAkC,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CACE+C,UAAWC,EAAQ0F,WACnBjM,KAAI,QAAAgB,OAAUI,EAAV,WACJgK,MAAM,SACN9D,OAAO,SACPiE,SAAUP,EACVQ,OAAQP,EACRU,MAAOD,EAAgB,QAAA1K,OACbI,EADa,WAErB2J,EACAtJ,GAEFyK,WAAYL,EAA0B,QAAA7K,OAC5BI,EAD4B,WAEpC2J,EACAtJ,KAIJ6B,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CACE+C,UAAWC,EAAQ0F,WACnBjM,KAAI,QAAAgB,OAAUI,EAAV,UACJgK,MAAM,QACN9D,OAAO,SACPiE,SAAUP,EACVQ,OAAQP,EACRU,MAAOD,EAAgB,QAAA1K,OACbI,EADa,UAErB2J,EACAtJ,GAEFyK,WAAYL,EAA0B,QAAA7K,OAC5BI,EAD4B,UAEpC2J,EACAtJ,KAIJ6B,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAASmF,MAAM,cACbpF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACEc,MAAM,YACNiC,UAAWC,EAAQ4F,OACnB9F,aAAW,qBACXjC,QAAS,kBAAMqH,EAAaW,OAAOhL,KAEnCkC,EAAAC,EAAAC,cAACsF,GAAAvF,EAAD,oBAMRD,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,YACbhD,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAASmF,MAAM,WACbpF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACEc,MAAM,YACNiC,UAAWC,EAAQ4F,OACnB9F,aAAW,YACXjC,QAAS,kBACPqH,EAAa5J,KAAK,CAAExB,OAAQ,GAAIC,MAAO,OAGzCgD,EAAAC,EAAAC,cAACsF,GAAAvF,EAAD,mBASdD,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,YACbhD,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACEoF,QAAQ,YACR9H,KAAK,SACLwL,SAAUnB,EACV7G,MAAM,UACNiC,UAAWC,EAAQ+F,YALrB,UAUAhJ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACEoF,QAAQ,YACR0D,SAAUnB,EACV7G,MAAM,YACNiC,UAAWC,EAAQ+F,WACnBlI,QAAU,kBAAMxB,EAAmB8H,KALrC,oCAlKqB3D,aAuLpBxC,eAtMS,SAAA/D,GAAK,MAAK,CAChC6J,cAAe7J,EAAMkC,oBAAoBF,mBAGhB,SAAAgC,GAAQ,OACjCC,YACE,CACE9B,iBACAE,4BACAD,uBAEF4B,IA2LWD,CAGbyC,qBA1Oa,SAAAC,GAAK,MAAK,CACvB8E,uBAAwB,CACtBrE,MAAO,QACP6E,SAAU,QACVC,WAAY,UAEdP,WAAY,CACVO,WAAYvF,EAAMM,QAAQC,MAE5B8E,WAAY,CACV3E,UAAWV,EAAMM,QAAQC,KACzBgF,WAAYvF,EAAMM,QAAQC,KAC1BiF,YAAaxF,EAAMM,QAAQC,QA8N7BR,CAAmB/D,YAAWkH,MCtOjBnD,wBApBA,SAAAC,GAAK,MAAK,CACvBmB,oBAAqB,CACnBC,SAAU,QACVC,OAAQ,OACRC,MAAO,UAgBIvB,CAZc,SAAArC,GAC3B,OACErB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ8C,UAAU,cAChBhD,EAAAC,EAAAC,cAACkJ,GAAD,MACApJ,EAAAC,EAAAC,cAAA,oCAEFF,EAAAC,EAAAC,cAACmJ,GAAD,6BCOSC,GAtBO,SAAA1J,GAKhB,IAJJwC,EAIIxC,EAJJwC,IACAI,EAGI5C,EAHJ4C,IACA+G,EAEI3J,EAFJ2J,8BACAC,EACI5J,EADJ4J,QAEA,OACExJ,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACED,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAWqC,UAAU,KAAKC,MAAM,OAC7BC,GAEHxC,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KAAYmC,EAAIrF,QAChBiD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KAAYmC,EAAIpF,OACfuM,EACCvJ,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KACED,EAAAC,EAAAC,cAACwI,GAAD,CAAoBvK,OAAQqL,KAE5B,OCiCK9F,wBA5CA,SAAAC,GAAK,MAAK,CACvBQ,KAAM,CACJC,MAAO,OACPC,UAAgC,EAArBV,EAAMM,QAAQC,KACzBI,UAAW,QAEbC,MAAO,CACLC,SAAU,OAqCCd,CAjCQ,SAAA9D,GAAqE,IAAlEqD,EAAkErD,EAAlEqD,QAASnG,EAAyD8C,EAAzD9C,KAAMyM,EAAmD3J,EAAnD2J,8BAA+BxC,EAAoBnH,EAApBmH,cACtE,OACE/G,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CAAO+C,UAAWC,EAAQkB,MACxBnE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAO+C,UAAWC,EAAQsB,OACxBvE,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,KACED,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACED,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,UACAD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,eACAD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,cACCsJ,EAAgCvJ,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,2BAA4C,OAGjFD,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,KACGnD,EAAKc,IAAI,SAACwE,EAAKI,GACd,OACExC,EAAAC,EAAAC,cAACuJ,GAAD,CAAerH,IAAKA,EAClBI,IAAKA,EAAM,EACXL,IAAKK,EACL+G,8BAA+BA,EAC/BC,QAASzC,EAAcvE,IAAQ,YCIzCkH,uBACJ,SAAAA,EAAYrI,GAAM,IAAAC,EAAA,OAAA9D,OAAA+D,EAAA,EAAA/D,CAAAgE,KAAAkI,IAChBpI,EAAA9D,OAAAiE,EAAA,EAAAjE,CAAAgE,KAAAhE,OAAAkE,EAAA,EAAAlE,CAAAkM,GAAA/H,KAAAH,KAAMH,KACDnE,MAAQ,CACT0E,oBAAoB,EACpB2H,+BAA+B,GAJnBjI,sFAShBE,KAAKH,MAAM9B,2BACXsC,aAAaL,KAAKM,gDAIlBN,KAAKO,SAAS,CAACH,oBAAoB,0CAGvB,IAAAI,EAAAR,KAGZA,KAAKM,UAAYG,WAAW,WACzBD,EAAKD,SAAS,CAACH,oBAAoB,KAClC,oCAGG,IAAA+H,EAAAnI,KACP,OACExB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ8C,UAAU,cAChBhD,EAAAC,EAAAC,cAACkJ,GAAD,MACApJ,EAAAC,EAAAC,cAAA,yBAAiBsB,KAAKH,MAAMxD,WAAWnB,KAAvC,MAGFsD,EAAAC,EAAAC,cAAA,WAAS8C,UAAU,YACjBhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACEoF,QAAQ,YACRtE,MAAM,YACNiC,UAAWxB,KAAKH,MAAM4B,QAAQ2G,eAC9B9I,QAAU,WACR6I,EAAKtI,MAAM/B,mBAAmBqK,EAAKtI,MAAMxD,YACzC8L,EAAK5H,SAAS,CAACwH,+BAA+B,MANlD,yBAaFvJ,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,cACbhD,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAASmF,MAAM,mBACbpF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACEc,MAAM,UACNuB,UAAWO,IACXC,GAAE,SAAApF,OAAW8D,KAAKH,MAAMxD,WAAWpB,KACnCsG,aAAW,OACXC,UAAWxB,KAAKH,MAAM4B,QAAQ4G,eAE9B7J,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,QAGJD,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAASmF,MAAM,qBACbpF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACE8C,aAAW,SACXC,UAAWxB,KAAKH,MAAM4B,QAAQ4G,cAC9B/I,QAASU,KAAK6B,WAAWC,KAAK9B,OAE9BxB,EAAAC,EAAAC,cAACsD,GAAD,CACE3F,WAAY2D,KAAKH,MAAMxD,WACvBgC,OAAQ2B,KAAKtE,MAAM0E,mBACnB9B,YAAa0B,KAAK1B,YAAYwD,KAAK9B,QAErCxB,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,UAMRD,EAAAC,EAAAC,cAAC4J,GAAD,CACEhN,KAAM0E,KAAKH,MAAMxD,WAAWf,KAC5ByM,8BAA+B/H,KAAKtE,MAAMqM,8BAC1CxC,cAAevF,KAAKH,MAAM0F,eAAiB,aAjFpBtD,cA6FlBxC,eAxHS,SAAC/D,EAAO6M,GAAR,MAAsB,CAC5ClM,WAAYmM,KAAEC,KACZ/M,EAAMD,aAAc,CAAER,IAAKsN,EAASG,MAAMC,OAAOC,eAEnDrD,cAAe7J,EAAMkC,oBAAoBF,mBAGhB,SAAAgC,GAAQ,OACjCC,YACE,CACE5B,4BACAD,uBAEF4B,IA2GWD,CAEOyC,qBA1GP,SAAAC,GAAK,MAAK,CACvBkG,cAAe,CACb7F,OAAQL,EAAMM,QAAQC,MAExB0F,eAAgB,CACdvF,UAAWV,EAAMM,QAAQC,KACzBgF,WAAY,OACZC,YAAa,UAmGKzF,CAAmBgG,KC3GnCnD,WAAmBC,YAAaC,MAAM,CAC1C/J,KAAM8J,YACN1J,KAAM0J,WACHE,GACCF,YAAaC,MAAM,CACjB1J,OAAQyJ,YACLG,IAAI,EAAG,mBACPC,SAAS,YACZ5J,MAAOwJ,YACJG,IAAI,EAAG,mBACPC,SAAS,eAGfA,SAAS,kBACTD,IAAI,EAAG,+BAiBN0D,kMAGF7I,KAAKH,MAAM9B,4DAGL,IAAAuH,EACwFtF,KAAKH,MAA3F4B,EADF6D,EACE7D,QAASpF,EADXiJ,EACWjJ,WAAY2B,EADvBsH,EACuBtH,iBAAkBF,EADzCwH,EACyCxH,mBAAoBS,EAD7D+G,EAC6D/G,QAASgH,EADtED,EACsEC,cAC5E,OACE/G,EAAAC,EAAAC,cAAC8G,GAAA,EAAD,CACEC,cAAepJ,EACfqJ,iBAAkBX,GAClBY,SAAU,SAACC,EAAQC,GACjBD,EAAO3K,IAAMoB,EAAWpB,IACxB2K,EAAOkD,SAAWzM,EAAWyM,SAC7BlD,EAAOvK,eAAiB,IAAID,KAC5B4C,EAAiB4H,GAGjBrH,EAAQxB,KAAK,MAEfiJ,OAAQ,SAAA5H,GAAA,IACNwH,EADMxH,EACNwH,OACAjJ,EAFMyB,EAENzB,OACAsJ,EAHM7H,EAGN6H,QACAC,EAJM9H,EAIN8H,aACAC,EALM/H,EAKN+H,WACAC,EANMhI,EAMNgI,aANM,OAQN5H,EAAAC,EAAAC,cAAC8G,GAAA,EAAD,KACEhH,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,YACbhD,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CACEvD,KAAK,OACLoL,MAAM,OACN9E,UAAWC,EAAQ8E,UACnBC,MAAOZ,EAAO1K,KACduL,SAAUP,EACVQ,OAAQP,EACR3D,OAAO,YAIXhE,EAAAC,EAAAC,cAAC8G,GAAA,EAAD,CACEtK,KAAK,OACL8K,OAAQ,SAAAW,GACN,IAMMC,EAAmB,SAAC1L,EAAM+K,EAAStJ,GACvC,IAAMkK,EAAQC,aAAMnK,EAAQzB,GAE5B,SADc4L,aAAMb,EAAS/K,KACb2L,IAGZE,EAA6B,SAAC7L,EAAM+K,EAAStJ,GACjD,IAAMkK,EAAQC,aAAMnK,EAAQzB,GAE5B,OADc4L,aAAMb,EAAS/K,IACb2L,EAAQA,EAAQ,IAGlC,OACErI,EAAAC,EAAAC,cAAA,WAnBqB,SAAA/B,GACrB,MAA8B,kBAAhBA,EAAOrB,KACnBkD,EAAAC,EAAAC,cAAA,WAAM/B,EAAOrB,MACX,KAiBD0L,CAAerK,GAEfiJ,EAAOtK,KAAKc,IAAI,SAACwE,EAAKtE,GAAN,OACfkC,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,WAAWb,IAAKrE,GAE7BkC,EAAAC,EAAAC,cAAA,OAAK8C,UAAWC,EAAQwF,wBACtB1B,GAAiBA,EAAcjJ,IAAUiJ,EAAcjJ,GACnDkC,EAAAC,EAAAC,cAACwI,GAAD,CAAoBvK,OAAQ4I,EAAcjJ,KAC1C,IAGNkC,EAAAC,EAAAC,cAAA,OAAK8C,UAAWC,EAAQ0F,YAAa7K,EAAQ,EAA7C,KACAkC,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CACE+C,UAAWC,EAAQ0F,WACnBjM,KAAI,QAAAgB,OAAUI,EAAV,WACJkK,MAAOZ,EAAOtK,KAAKgB,GAAOf,OAC1B+K,MAAM,SACN9D,OAAO,SACPiE,SAAUP,EACVQ,OAAQP,EACRU,MAAOD,EAAgB,QAAA1K,OACbI,EADa,WAErB2J,EACAtJ,GAEFyK,WAAYL,EAA0B,QAAA7K,OAC5BI,EAD4B,WAEpC2J,EACAtJ,KAIJ6B,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CACE+C,UAAWC,EAAQ0F,WACnBjM,KAAI,QAAAgB,OAAUI,EAAV,UACJkK,MAAOZ,EAAOtK,KAAKgB,GAAOd,MAC1B8K,MAAM,QACN9D,OAAO,SACPiE,SAAUP,EACVQ,OAAQP,EACRU,MAAOD,EAAgB,QAAA1K,OACbI,EADa,UAErB2J,EACAtJ,GAEFyK,WAAYL,EAA0B,QAAA7K,OAC5BI,EAD4B,UAEpC2J,EACAtJ,KAIJ6B,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAASmF,MAAM,cACbpF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACEc,MAAM,YACNiC,UAAWC,EAAQ4F,OACnB9F,aAAW,qBACXjC,QAAS,kBAAMqH,EAAaW,OAAOhL,KAEnCkC,EAAAC,EAAAC,cAACsF,GAAAvF,EAAD,oBAMRD,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,YACbhD,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAASmF,MAAM,WACbpF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACEc,MAAM,YACNiC,UAAWC,EAAQ4F,OACnB9F,aAAW,YACXjC,QAAS,kBACPqH,EAAa5J,KAAK,CAAExB,OAAQ,GAAIC,MAAO,OAGzCgD,EAAAC,EAAAC,cAACsF,GAAAvF,EAAD,mBASdD,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,YACbhD,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACEoF,QAAQ,YACR9H,KAAK,SACLwL,SAAUnB,EACV7G,MAAM,UACNiC,UAAWC,EAAQ+F,YALrB,UAUAhJ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACEoF,QAAQ,YACR0D,SAAUnB,EACV7G,MAAM,YACNiC,UAAWC,EAAQ+F,WACnBlI,QAAU,kBAAMxB,EAAmB8H,KALrC,oCAhKmB3D,aAqLlBxC,eAnMS,SAAA/D,GAAK,MAAK,CAChC6J,cAAe7J,EAAMkC,oBAAoBF,mBAGhB,SAAAgC,GAAQ,OACjCC,YACE,CACE3B,oBACAD,4BACAD,uBAEF4B,IAwLWD,CAGbyC,qBAvOa,SAAAC,GAAK,MAAK,CACvB8E,uBAAwB,CACtBrE,MAAO,QACP6E,SAAU,QACVC,WAAY,UAEdP,WAAY,CACVO,WAAYvF,EAAMM,QAAQC,MAE5B8E,WAAY,CACV3E,UAAWV,EAAMM,QAAQC,KACzBgF,WAAYvF,EAAMM,QAAQC,KAC1BiF,YAAaxF,EAAMM,QAAQC,QA2N7BR,CAAmB/D,YAAW0K,MCvNjBpJ,eA1BS,SAAC/D,EAAO6M,GAAR,MAAsB,CAC5ClM,WAAYmM,KAAEC,KACZ/M,EAAMD,aAAc,CAAER,IAAKsN,EAASG,MAAMC,OAAOC,iBAwBtCnJ,CAAyByC,qBApBzB,SAAAC,GAAK,MAAK,CACvBmB,oBAAqB,CACnBC,SAAU,QACVC,OAAQ,OACRC,MAAO,UAgB6BvB,CAZb,SAAA9D,GAAoB,IAAjB/B,EAAiB+B,EAAjB/B,WAC5B,OACEmC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ8C,UAAU,cAChBhD,EAAAC,EAAAC,cAACkJ,GAAD,MACApJ,EAAAC,EAAAC,cAAA,8BAAsBrC,EAAWnB,KAAjC,MAEFsD,EAAAC,EAAAC,cAACqK,GAAD,CAAoB1M,WAAYA,QCXvB2M,GAdM,SAAAnJ,GACnB,OACErB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ8C,UAAU,cAChBhD,EAAAC,EAAAC,cAAA,mCAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAMC,GAAG,KAAT,8BCgCO2H,uBAjCb,SAAAA,EAAYpJ,GAAO,IAAAC,EAAA,OAAA9D,OAAA+D,EAAA,EAAA/D,CAAAgE,KAAAiJ,IACjBnJ,EAAA9D,OAAAiE,EAAA,EAAAjE,CAAAgE,KAAAhE,OAAAkE,EAAA,EAAAlE,CAAAiN,GAAA9I,KAAAH,KAAMH,KACD4B,QAAU5B,EAAM4B,QAFJ3B,wEAMjB,OACEtB,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,OACbhD,EAAAC,EAAAC,cAACwK,EAAA,EAAD,KACE1K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIvI,UAAWwI,KACjC9K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASvI,UAAWwI,KACtC9K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,WACLvI,UAAWyI,KAEb/K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,sBACLvI,UAAWoH,KAEb1J,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,sBACLvI,UAAW0I,KAEbhL,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOrI,UAAWkI,cA3BV/G,cCSHwH,GAZF,SAAArL,GAAA,IAAGsL,EAAHtL,EAAGsL,MAAH,OACXlL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAUD,MAAOA,GACflL,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAQC,SAAUC,gBAChBtL,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOE,KAAK,IAAIvI,UAAWmI,QCE3BS,WAAQK,YAAYC,ECXD,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACF,OAEF,IAAMvO,EAAS0O,KAAKC,MAAMJ,GAY1B,OATIvO,EAAMD,cAAgBC,EAAMD,aAAaG,OAAS,IAGpDF,EAAMD,aAAeC,EAAMD,aAAaW,IAAI,SAAAC,GAG1C,OAFAA,EAAWlB,UAAY,IAAIC,KAAKiB,EAAWlB,WAC3CkB,EAAWhB,eAAiB,IAAID,KAAKiB,EAAWhB,gBACzCgB,KAGJX,EACP,MAAOmB,GACP,QDRFyN,GACAC,OAAOC,8BAAgCD,OAAOC,iCAGhDd,GAAMe,UAAUC,IAAS,YCQA,SAAChP,GACxB,IACE,IAAMuO,EAAkBG,KAAKO,UAAUjP,GACvCwO,aAAaU,QAAQ,QAASX,GAC9B,MAAOpN,KDXTgO,CAAU,CACRpP,aAAciO,GAAMoB,WAAWrP,gBAEhC,MAEHsP,IAAS/E,OAAOxH,EAAAC,EAAAC,cAACsM,GAAD,CAAMtB,MAAOA,KAAWuB,SAASC,eAAe","file":"static/js/main.44f7c6aa.chunk.js","sourcesContent":["// import uniqid from \"uniqid\";\n\nconst dictionaryData = [\n  {\n    uid: 'jnre075x',//uniqid.time(),\n    name: 'Apple product colors',\n    createdAt: new Date(\"December 17, 2017 10:24:00\"),\n    lastModifiedAt: new Date(\"December 17, 2017 10:24:00\"),\n    rows: [\n      {\n        uid: 'jnre075y',\n        domain: \"Stonegrey\",\n        range: \"Dark Grey\"\n      },\n      {\n        uid: 'jnre075z',\n        domain: \" Midnight Black\",\n        range: \"Black\"\n      },\n      {\n        uid: 'jnre075w',\n        domain: \"Mystic Silver\",\n        range: \"Silver\"\n      }\n    ]\n  }\n];\n\n// createdAt: new Date('January 17, 2018 15:32:10'),\n// lastModifiedAt: new Date('January 17, 2018 15:32:10'),\n// createdAt: new Date('January 17, 2017 15:41:12'),\n// lastModifiedAt: new Date('January 17, 2017 15:41:12'),\n\nexport default dictionaryData;\n","import dictionaryData from '../data/dictionaryData';\nimport {\n  ADD_DICTIONARY,\n  UPDATE_DICTIONARY,\n  DELETE_DICTIONARY\n} from '../constants/ActionTypes';\n\nconst dictionaries = (state = dictionaryData, action) => {\n  switch (action.type) {\n    case ADD_DICTIONARY:\n      return [...state, action.payload];\n    case UPDATE_DICTIONARY:\n      return state.map((dictionary, index) => {\n        if (dictionary.uid === action.payload.uid) {\n          return {...action.payload}\n        }\n        return dictionary;\n      }) \n    case DELETE_DICTIONARY:\n      return state.filter(dictionary => dictionary.uid !== action.payload.uid);\n    default:\n      return state;\n  }\n};\n\nexport default dictionaries;","export const ADD_DICTIONARY = 'ADD_DICTIONARY';\nexport const VALIDATE_DICTIONARY = 'VALIDATE_DICTIONARY';\nexport const CLEAR_VALIDATED_DICTIONARY = 'CLEAR_VALIDATED_DICTIONARY';\nexport const UPDATE_DICTIONARY = 'UPDATE_DICTIONARY';\nexport const DELETE_DICTIONARY = 'DELETE_DICTIONARY';\n\n","import {\n  VALIDATE_DICTIONARY,\n  CLEAR_VALIDATED_DICTIONARY\n} from '../constants/ActionTypes';\nimport { validateDictionaryConsistency } from '../validation/';\nimport { consistencyErrorsPerRow } from '../utils/';\n\nconst newDictionary = (state = {}, action) => {\n  switch (action.type) {\n    case VALIDATE_DICTIONARY:\n      const errors = validateDictionaryConsistency(action.payload.rows);\n      const errorsPerRow = consistencyErrorsPerRow(errors, action.payload.rows.length);\n      return {...action.payload, validationErrors: errorsPerRow};\n    case CLEAR_VALIDATED_DICTIONARY:\n      return {};\n    default:\n      return state;\n  }\n}\n\nexport default newDictionary;","export const consistencyErrorsPerRow = (errors, length) => {\n  var errorsPerRow = [];\n  while(length--) errorsPerRow[length] = [];\n\n  errors.forEach( err => {\n    errorsPerRow[err.indexA].push(err);\n    errorsPerRow[err.indexB].push(err);\n  })\n  console.log(errorsPerRow)\n  return errorsPerRow;\n}\n\n","import {\n  ERR_DUPLICATE_ROW,\n  ERR_FORK,\n  ERR_CYCLE,\n  ERR_CHAIN\n} from '../constants/ErrorTypes.js';\n\n\nexport const validateDictionaryConsistency = rows => {\n  const errors = [];\n  rows.forEach((rowA, idxA) => {\n    if (idxA < rows.length - 1) {\n      rows.slice(idxA + 1).forEach((rowB, idxB) => {\n        // Duplicate rows\n        if (rowA.domain === rowB.domain && rowA.range === rowB.range) {\n          errors.push({\n            type: ERR_DUPLICATE_ROW,\n            indexA: idxA,\n            indexB: idxA + idxB + 1\n          });\n        }\n\n        // Forks\n        if (rowA.domain === rowB.domain && rowA.range !== rowB.range) {\n          errors.push({ type: ERR_FORK, indexA: idxA, indexB: idxA + idxB + 1 });\n        }\n\n        // Cycles\n        if (rowA.domain === rowB.range && rowA.range === rowB.domain) {\n          errors.push({ type: ERR_CYCLE, indexA: idxA, indexB: idxA + idxB + 1 });\n        }\n\n        // Chains\n        if (rowA.range === rowB.domain) {\n          errors.push({ type: ERR_CHAIN, indexA: idxA, indexB: idxA + idxB + 1 });\n        }\n      });\n    }\n  });\n  return errors;\n};\n","export const ERR_DUPLICATE_ROW = 'ERR_DUPLICATE_ROW';\nexport const ERR_FORK = 'ERR_FORK';\nexport const ERR_CYCLE = 'ERR_CYCLE';\nexport const ERR_CHAIN = 'ERR_CHAIN';\n","import { combineReducers } from 'redux'\nimport dictionaries from './dictionaries';\nimport validatedDictionary from './validatedDictionary';\n\nexport default combineReducers({\n  dictionaries,\n  validatedDictionary\n});","import * as types from '../constants/ActionTypes';\n\nexport const addDictionary = payload => ({ type: types.ADD_DICTIONARY, payload });\nexport const validateDictionary = payload => {\n  return ({ type: types.VALIDATE_DICTIONARY, payload })\n};\nexport const clearValidatedDictionary = payload => ({ type: types.CLEAR_VALIDATED_DICTIONARY });\nexport const updateDictionary = payload => ({ type: types.UPDATE_DICTIONARY, payload });\nexport const deleteDictionary = payload => ({ type: types.DELETE_DICTIONARY, payload });\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { deleteDictionary } from './actions';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst mapDispatchToProps = dispatch => \n  bindActionCreators(\n    {\n      deleteDictionary\n    },\n    dispatch\n);\n\n\n\n\n\nconst DictionaryDeleteDialog = withRouter(\n  ({ isOpen, closeDialog, history, dictionary, deleteDictionary }) => {\n  return (\n    <div>\n     <Dialog\n        open={isOpen}\n        onClose={closeDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete Dictionary?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            You will not be able to retrieve this dictionary once it has been deleted.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {\n            deleteDictionary(dictionary)\n            closeDialog()\n            history.push('/');\n          }} color=\"secondary\">\n            Delete\n          </Button>\n          <Button onClick={closeDialog} color=\"primary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(DictionaryDeleteDialog);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DictionaryDeleteDialog from './DictionaryDeleteDialog';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nconst styles = theme => ({\n  defaultTableButton: {\n    backgroundColor: theme.palette.primary.contrastText,\n    margin: theme.spacing.unit\n  }\n});\n\nclass DictionariesTableRow extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        isDeleteDialogOpen: false\n    };\n  }\n\n  componentWillUnmount(){\n    clearTimeout(this.timeoutId);\n  }\n\n  openDialog() {\n    this.setState({isDeleteDialogOpen: true})\n  }\n\n  closeDialog() {\n    // for some bizzare reason the synchronous version\n    // doesn't close the modal\n    this.timeoutId = setTimeout(() => {\n       this.setState({isDeleteDialogOpen: false})\n     }, 1)\n  }\n\n  render () {\n    return (\n      <TableRow key={this.props.row.uid}>\n        <TableCell component=\"th\" scope=\"row\">\n          {this.props.idx}\n        </TableCell>\n        <TableCell>{this.props.row.uid}</TableCell>\n        <TableCell>{this.props.row.name}</TableCell>\n        <TableCell>\n          <Moment format=\"YYYY/MM/DD HH:mm:ss\">\n            {this.props.row.createdAt.toISOString()}\n          </Moment>\n        </TableCell>\n        <TableCell>\n          <Moment format=\"YYYY/MM/DD HH:mm:ss\">\n            {this.props.row.lastModifiedAt.toISOString()}\n          </Moment>\n        </TableCell>\n        <TableCell>\n          <IconButton\n            component={Link}\n            to={`/view/${this.props.row.uid}`}\n            aria-label=\"View\"\n            className={this.props.classes.defaultTableButton}\n          >\n            <VisibilityIcon />\n          </IconButton>\n          <IconButton\n            component={Link}\n            to={`/edit/${this.props.row.uid}`}\n            aria-label=\"Edit\"\n            className={this.props.classes.defaultTableButton}\n          >\n            <EditIcon />\n          </IconButton>\n          <IconButton\n            aria-label=\"Delete\"\n            className={this.props.classes.defaultTableButton}\n            onClick={this.openDialog.bind(this)}\n          >\n            <DeleteIcon />\n            <DictionaryDeleteDialog\n              dictionary={this.props.row}\n              isOpen={this.state.isDeleteDialogOpen}\n              closeDialog={this.closeDialog.bind(this)}\n            />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  }\n};\n\nDictionariesTableRow.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DictionariesTableRow);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DictionariesTableRow from './DictionariesTableRow';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\nconst DictionariesTable = ({ classes, rows }) => {\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>#</TableCell>\n            <TableCell>Unique Id</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Created</TableCell>\n            <TableCell>Last Modified</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, idx) => {\n            return (\n              <DictionariesTableRow row={row} idx={idx + 1} key={row.uid} />\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n\nDictionariesTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DictionariesTable);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport DictionariesTable from './DictionariesTable';\n\nconst mapStateToProps = state => ({\n  dictionaries: state.dictionaries\n});\n\nconst styles = theme => ({\n  newDictionaryButton: {\n    position: 'fixed',\n    bottom: '20px',\n    right: '20px'\n  }\n});\n\nconst DictionaryListPage = props => {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <h1>React Dictionary App</h1>\n      </header>\n      <DictionariesTable rows={props.dictionaries} />\n      <Tooltip title=\"Create a new dictionary\">\n        <Button\n          component={ Link }\n          to=\"/create\"\n          variant=\"fab\"\n          color=\"primary\"\n          aria-label=\"Add\"\n          className={props.classes.newDictionaryButton}\n        >\n          <AddIcon />\n        </Button>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(DictionaryListPage));\n\n// <header className=\"App-header\">\n//             <h1>React Dictionary App</h1>\n//         </header>\n//         <DictionariesTable rows={this.props.dictionaries}></DictionariesTable>\n//         <Tooltip title=\"Create a new dictionary\">\n//           <Button variant=\"fab\" color=\"primary\" aria-label=\"Add\" className={this.classes.newDictionaryButton}>\n//             <AddIcon />\n//           </Button>\n//         </Tooltip>\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst styles = theme => ({\n  homeButton: {\n    marginTop: 20\n  }\n});\n\nconst HombeButton = ({ classes}) => {\n  return(\n    <div>\n    <Tooltip title=\"Remove row\">\n      <IconButton\n        component = {Link}\n        to = \"/\"\n        color=\"secondary\"\n        className={classes.homeButton}\n        aria-label=\"Navigate to home\"\n      >\n        <Icon>home</Icon>\n      </IconButton>\n    </Tooltip>\n    </div>\n  )\n}\n\nHombeButton.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(HombeButton);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {\n  ERR_DUPLICATE_ROW,\n  ERR_FORK,\n  ERR_CYCLE,\n  ERR_CHAIN\n} from './constants/ErrorTypes';\n\nimport {\n  SEVERITY_DUPLICATE_ROW,\n  SEVERITY_FORK,\n  SEVERITY_CHAIN,\n  SEVERITY_CYCLE\n} from './constants/SeverityTypes';\n\nconst styles = theme => ({\n  severityListItem:{\n    margin: '2px 0',\n    padding: '2px 5px',\n    listStyle: 'none',\n    borderRadius: '3px'\n  },\n  severity0: {\n    backgroundColor: '#FFF59D',\n  },\n  severity1: {\n    backgroundColor: '#FFCC80',\n  },\n  severity2: {\n    backgroundColor: '#FF8A80',\n  },\n  severity3: {\n    backgroundColor: '#EF5350',\n  },\n});\n\n\nconst errorMessages = {}\nerrorMessages[ERR_DUPLICATE_ROW] = 'Duplicate';\nerrorMessages[ERR_FORK] = 'Fork';\nerrorMessages[ERR_CYCLE] = 'Cycle';\nerrorMessages[ERR_CHAIN] = 'Chain';\n\nconst errorsToSeverities = {}\nerrorsToSeverities[ERR_DUPLICATE_ROW] = SEVERITY_DUPLICATE_ROW;\nerrorsToSeverities[ERR_FORK] = SEVERITY_FORK;\nerrorsToSeverities[ERR_CYCLE] = SEVERITY_CYCLE;\nerrorsToSeverities[ERR_CHAIN] = SEVERITY_CHAIN;\n\nconst severityClasses = {}\nseverityClasses[SEVERITY_DUPLICATE_ROW] = 'severity0';\nseverityClasses[SEVERITY_FORK] = 'severity1';\nseverityClasses[SEVERITY_CHAIN] = 'severity2';\nseverityClasses[SEVERITY_CYCLE] = 'severity3';\n\nconst SeverityErrorsList = ({ errors, classes }) => {\n  const leErrors = Array.isArray(errors) ?  errors : [];\n  const errorItems = leErrors.map((err, idx) => \n    <li key={idx} className={`${classes[severityClasses[errorsToSeverities[err.type]]]} ${classes.severityListItem}`}>\n      {`${errorMessages[err.type]} - rows: (${err.indexA + 1},${err.indexB + 1})`}\n    </li>\n  );\n  return(\n    <ul>\n      {errorItems}\n    </ul>\n  );\n}\n\nSeverityErrorsList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SeverityErrorsList);","export const SEVERITY_DUPLICATE_ROW = 0;\nexport const SEVERITY_FORK = 1;\nexport const SEVERITY_CHAIN = 2;\nexport const SEVERITY_CYCLE = 3;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { addDictionary,\n  clearValidatedDictionary,\n  validateDictionary\n} from './actions/';\nimport { Formik, Form, FieldArray, getIn } from 'formik';\nimport * as Yup from 'yup';\nimport uniqid from 'uniqid';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SeverityErrorsList from './SeverityErrorsList'\nimport './CreateDictionaryForm.css';\n\nconst styles = theme => ({\n  severityErrorContainer: {\n    width: '180px',\n    fontSize: '0.7em',\n    marginLeft: '-180px',\n  },\n  leftMargin: {\n    marginLeft: theme.spacing.unit\n  },\n  formButton: {\n    marginTop: theme.spacing.unit,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  }\n});\n\nconst DictionarySchema = Yup.object().shape({\n  name: Yup.string(),\n  rows: Yup.array()\n    .of(\n      Yup.object().shape({\n        domain: Yup.string()\n          .min(1, 'Cannot be empty')\n          .required('Required'),\n        range: Yup.string()\n          .min(1, 'Cannot be empty')\n          .required('Required')\n      })\n    )\n    .required('Must have rows')\n    .min(1, 'Must have at least 1 row')\n});\n\nconst mapStateToProps = state => ({\n  cErrorsPerRow: state.validatedDictionary.validationErrors\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      addDictionary,\n      clearValidatedDictionary,\n      validateDictionary\n    },\n    dispatch\n  );\n\n\nclass CreateDictionaryForm extends Component {\n  \n  componentWillUnmount(){\n    this.props.clearValidatedDictionary();\n  }\n\n  render(){  \n    const { classes, addDictionary, validateDictionary, history, cErrorsPerRow } = this.props;\n    \n    return (\n      <Formik\n        initialValues={{\n          name: '',\n          rows: [{ domain: '', range: '' }]\n        }}\n        validationSchema={DictionarySchema}\n        onSubmit={(values, formikBag) => {\n          values.uid = uniqid.time();\n          values.createdAt = new Date();\n          values.lastModifiedAt = new Date();\n          addDictionary(values);\n\n          //navigate to home\n          history.push('/');\n        }}\n        render={({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isSubmitting\n        }) => (\n          <Form>\n            <div className=\"form-row\">\n              <TextField\n                name=\"name\"\n                label=\"Name\"\n                className={classes.textField}\n                value={values.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                margin=\"normal\"\n              />\n            </div>\n\n            <FieldArray\n              name=\"rows\"\n              render={arrayHelpers => {\n                const RowArrayErrors = errors => {\n                  return typeof errors.rows === 'string' ? (\n                    <div>{errors.rows}</div>\n                  ) : null;\n                };\n\n                const hasRowArrayError = (name, touched, errors) => {\n                  const error = getIn(errors, name);\n                  const touch = getIn(touched, name);\n                  return touch && error ? true : false;\n                };\n\n                const helperTextForRowArrayError = (name, touched, errors) => {\n                  const error = getIn(errors, name);\n                  const touch = getIn(touched, name);\n                  return touch && error ? error : '';\n                };\n\n                return (\n                  <div>\n                    {RowArrayErrors(errors)}\n\n                    {values.rows.map((row, index) => (\n                      <div className=\"form-row\" key={index}>\n\n                        <div className={classes.severityErrorContainer}>{\n                          cErrorsPerRow && cErrorsPerRow[index] && cErrorsPerRow[index]\n                            ? <SeverityErrorsList errors={cErrorsPerRow[index]} />\n                            : ''\n                        }</div>\n\n                        <div className={classes.leftMargin}>{index + 1}.</div>\n                        <TextField\n                          className={classes.leftMargin}\n                          name={`rows.${index}.domain`}\n                          label=\"Domain\"\n                          margin=\"normal\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={hasRowArrayError(\n                            `rows.${index}.domain`,\n                            touched,\n                            errors\n                          )}\n                          helperText={helperTextForRowArrayError(\n                            `rows.${index}.domain`,\n                            touched,\n                            errors\n                          )}\n                        />\n\n                        <TextField\n                          className={classes.leftMargin}\n                          name={`rows.${index}.range`}\n                          label=\"Range\"\n                          margin=\"normal\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={hasRowArrayError(\n                            `rows.${index}.range`,\n                            touched,\n                            errors\n                          )}\n                          helperText={helperTextForRowArrayError(\n                            `rows.${index}.range`,\n                            touched,\n                            errors\n                          )}\n                        />\n\n                        <Tooltip title=\"Remove row\">\n                          <IconButton\n                            color=\"secondary\"\n                            className={classes.button}\n                            aria-label=\"Remove current row\"\n                            onClick={() => arrayHelpers.remove(index)}\n                          >\n                            <Icon>remove</Icon>\n                          </IconButton>\n                        </Tooltip>\n                      </div>\n                    ))}\n\n                    <div className=\"form-row\">\n                      <Tooltip title=\"Add row\">\n                        <IconButton\n                          color=\"secondary\"\n                          className={classes.button}\n                          aria-label=\"Add a row\"\n                          onClick={() =>\n                            arrayHelpers.push({ domain: '', range: '' })\n                          }\n                        >\n                          <Icon>add</Icon>\n                        </IconButton>\n                      </Tooltip>\n                    </div>\n                  </div>\n                );\n              }}\n            />\n\n            <div className=\"form-row\">\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={isSubmitting}\n                color=\"primary\"\n                className={classes.formButton}\n              >\n                Create\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                disabled={isSubmitting}\n                color=\"secondary\"\n                className={classes.formButton}\n                onClick={ () => validateDictionary(values)}\n              >\n                Validate Consistency\n              </Button>\n            </div>\n          </Form>\n        )}\n      />\n    );\n  }\n}\n\nCreateDictionaryForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(withRouter(CreateDictionaryForm)));\n","import React from 'react';\nimport HomeButton from './HomeButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport CreateDictionaryForm from './CreateDictionaryForm';\n\nconst styles = theme => ({\n  newDictionaryButton: {\n    position: 'fixed',\n    bottom: '20px',\n    right: '20px'\n  }\n});\n\nconst DictionaryCreatePage = props => {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <HomeButton />\n        <h1>Create new dictionary</h1>\n      </header>\n      <CreateDictionaryForm></CreateDictionaryForm>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(DictionaryCreatePage);\n","import React from 'react';\nimport SeverityErrorsList from './SeverityErrorsList';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nconst DictionaryRow = ({\n  row,\n  idx,\n  isDisplayingConsistencyErrors,\n  cErrors\n}) => {\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        {idx}\n      </TableCell>\n      <TableCell>{row.domain}</TableCell>\n      <TableCell>{row.range}</TableCell>\n      {isDisplayingConsistencyErrors ? (\n        <TableCell>\n          <SeverityErrorsList errors={cErrors} />\n        </TableCell>\n      ) : null}\n    </TableRow>\n  );\n};\n\nexport default DictionaryRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DictionaryRow from './DictionaryRow';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\nconst DictionaryRows = ({ classes, rows, isDisplayingConsistencyErrors, cErrorsPerRow }) => {\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>#</TableCell>\n            <TableCell>Domain</TableCell>\n            <TableCell>Range</TableCell>\n            {isDisplayingConsistencyErrors ? <TableCell>Consistency Errors</TableCell> : null}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, idx) => {\n            return (\n              <DictionaryRow row={row}\n                idx={idx + 1}\n                key={idx}\n                isDisplayingConsistencyErrors={isDisplayingConsistencyErrors}\n                cErrors={cErrorsPerRow[idx] || []}\n               />\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n\nDictionaryRows.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DictionaryRows);\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { clearValidatedDictionary, validateDictionary } from './actions/';\nimport PropTypes from 'prop-types';\nimport HomeButton from './HomeButton';\nimport DictionaryDeleteDialog from './DictionaryDeleteDialog';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport _ from 'lodash';\nimport DictionaryRows from './DictionaryRows';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport './DictionaryViewPage.css';\n\nconst mapStateToProps = (state, ownProps) => ({\n  dictionary: _.find(\n    state.dictionaries, { uid: ownProps.match.params.dictionaryid }\n  ),\n  cErrorsPerRow: state.validatedDictionary.validationErrors\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      clearValidatedDictionary,\n      validateDictionary\n    },\n    dispatch\n  );\n\nconst styles = theme => ({\n  defaultButton: {\n    margin: theme.spacing.unit\n  },\n  validateButton: {\n    marginTop: theme.spacing.unit,\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  }\n});\n\nclass DictionaryViewPage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        isDeleteDialogOpen: false,\n        isDisplayingConsistencyErrors: false\n    };\n  }\n\n  componentWillUnmount(){\n    this.props.clearValidatedDictionary();\n    clearTimeout(this.timeoutId);\n  }\n\n  openDialog() {\n    this.setState({isDeleteDialogOpen: true})\n  }\n\n  closeDialog() {\n    // for some bizzare reason the synchronous version\n    // doesn't close the modal\n    this.timeoutId = setTimeout(() => {\n       this.setState({isDeleteDialogOpen: false})\n     }, 1)\n  }\n\n  render() {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <HomeButton />\n          <h1>Dictionary \"{this.props.dictionary.name}\"</h1>\n        </header>\n\n        <section className=\"actions \">\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={this.props.classes.validateButton}\n              onClick={ () => {\n                this.props.validateDictionary(this.props.dictionary);\n                this.setState({isDisplayingConsistencyErrors: true})\n              }}\n            >\n              Validate Consistency\n            </Button>\n          </div>\n\n          <div className=\"text-right\">\n            <Tooltip title=\"Edit dictionary\">\n              <IconButton\n                color=\"primary\"\n                component={Link}\n                to={`/edit/${this.props.dictionary.uid}`}\n                aria-label=\"Edit\"\n                className={this.props.classes.defaultButton}\n              >\n                <EditIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Delete dictionary\">\n              <IconButton\n                aria-label=\"Delete\"\n                className={this.props.classes.defaultButton}\n                onClick={this.openDialog.bind(this)}\n              >\n                <DictionaryDeleteDialog\n                  dictionary={this.props.dictionary}\n                  isOpen={this.state.isDeleteDialogOpen}\n                  closeDialog={this.closeDialog.bind(this)}\n                />\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </section>\n\n        <DictionaryRows \n          rows={this.props.dictionary.rows}\n          isDisplayingConsistencyErrors={this.state.isDisplayingConsistencyErrors}\n          cErrorsPerRow={this.props.cErrorsPerRow || []}\n         />\n\n      </div>\n    );\n  }\n};\n\nDictionaryViewPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps)(withStyles(styles)(DictionaryViewPage));","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateDictionary, validateDictionary, clearValidatedDictionary } from './actions/';\nimport { Formik, Form, FieldArray, getIn } from 'formik';\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SeverityErrorsList from './SeverityErrorsList'\nimport './EditDictionaryForm.css';\n\nconst styles = theme => ({\n  severityErrorContainer: {\n    width: '180px',\n    fontSize: '0.7em',\n    marginLeft: '-180px',\n  },\n  leftMargin: {\n    marginLeft: theme.spacing.unit\n  },\n  formButton: {\n    marginTop: theme.spacing.unit,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  }\n});\n\nconst DictionarySchema = Yup.object().shape({\n  name: Yup.string(),\n  rows: Yup.array()\n    .of(\n      Yup.object().shape({\n        domain: Yup.string()\n          .min(1, 'Cannot be empty')\n          .required('Required'),\n        range: Yup.string()\n          .min(1, 'Cannot be empty')\n          .required('Required')\n      })\n    )\n    .required('Must have rows')\n    .min(1, 'Must have at least 1 row')\n});\n\nconst mapStateToProps = state => ({\n  cErrorsPerRow: state.validatedDictionary.validationErrors\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      updateDictionary,\n      clearValidatedDictionary,\n      validateDictionary\n    },\n    dispatch\n  );\n\nclass EditDictionaryForm extends Component {\n  \n  componentWillUnmount(){\n    this.props.clearValidatedDictionary();\n  }\n\n  render(){  \n    const { classes, dictionary, updateDictionary, validateDictionary, history, cErrorsPerRow } = this.props;\n    return (\n      <Formik\n        initialValues={dictionary}\n        validationSchema={DictionarySchema}\n        onSubmit={(values, formikBag) => {\n          values.uid = dictionary.uid;\n          values.createAt = dictionary.createAt;\n          values.lastModifiedAt = new Date();\n          updateDictionary(values);\n\n          //navigate to home\n          history.push('/');\n        }}\n        render={({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isSubmitting\n        }) => (\n          <Form>\n            <div className=\"form-row\">\n              <TextField\n                name=\"name\"\n                label=\"Name\"\n                className={classes.textField}\n                value={values.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                margin=\"normal\"\n              />\n            </div>\n\n            <FieldArray\n              name=\"rows\"\n              render={arrayHelpers => {\n                const RowArrayErrors = errors => {\n                  return typeof errors.rows === 'string' ? (\n                    <div>{errors.rows}</div>\n                  ) : null;\n                };\n\n                const hasRowArrayError = (name, touched, errors) => {\n                  const error = getIn(errors, name);\n                  const touch = getIn(touched, name);\n                  return touch && error ? true : false;\n                };\n\n                const helperTextForRowArrayError = (name, touched, errors) => {\n                  const error = getIn(errors, name);\n                  const touch = getIn(touched, name);\n                  return touch && error ? error : '';\n                };\n\n                return (\n                  <div>\n                    {RowArrayErrors(errors)}\n\n                    {values.rows.map((row, index) => (\n                      <div className=\"form-row\" key={index}>\n\n                        <div className={classes.severityErrorContainer}>{\n                          cErrorsPerRow && cErrorsPerRow[index] && cErrorsPerRow[index]\n                            ? <SeverityErrorsList errors={cErrorsPerRow[index]} />\n                            : ''\n                        }</div>\n\n                        <div className={classes.leftMargin}>{index + 1}.</div>\n                        <TextField\n                          className={classes.leftMargin}\n                          name={`rows.${index}.domain`}\n                          value={values.rows[index].domain}\n                          label=\"Domain\"\n                          margin=\"normal\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={hasRowArrayError(\n                            `rows.${index}.domain`,\n                            touched,\n                            errors\n                          )}\n                          helperText={helperTextForRowArrayError(\n                            `rows.${index}.domain`,\n                            touched,\n                            errors\n                          )}\n                        />\n\n                        <TextField\n                          className={classes.leftMargin}\n                          name={`rows.${index}.range`}\n                          value={values.rows[index].range}\n                          label=\"Range\"\n                          margin=\"normal\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={hasRowArrayError(\n                            `rows.${index}.range`,\n                            touched,\n                            errors\n                          )}\n                          helperText={helperTextForRowArrayError(\n                            `rows.${index}.range`,\n                            touched,\n                            errors\n                          )}\n                        />\n\n                        <Tooltip title=\"Remove row\">\n                          <IconButton\n                            color=\"secondary\"\n                            className={classes.button}\n                            aria-label=\"Remove current row\"\n                            onClick={() => arrayHelpers.remove(index)}\n                          >\n                            <Icon>remove</Icon>\n                          </IconButton>\n                        </Tooltip>\n                      </div>\n                    ))}\n\n                    <div className=\"form-row\">\n                      <Tooltip title=\"Add row\">\n                        <IconButton\n                          color=\"secondary\"\n                          className={classes.button}\n                          aria-label=\"Add a row\"\n                          onClick={() =>\n                            arrayHelpers.push({ domain: '', range: '' })\n                          }\n                        >\n                          <Icon>add</Icon>\n                        </IconButton>\n                      </Tooltip>\n                    </div>\n                  </div>\n                );\n              }}\n            />\n\n            <div className=\"form-row\">\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={isSubmitting}\n                color=\"primary\"\n                className={classes.formButton}\n              >\n                Update\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                disabled={isSubmitting}\n                color=\"secondary\"\n                className={classes.formButton}\n                onClick={ () => validateDictionary(values)}\n              >\n                Validate Consistency\n              </Button>\n            </div>\n          </Form>\n        )}\n      />\n    );\n  }\n}\n\nEditDictionaryForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(withRouter(EditDictionaryForm)));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport HomeButton from './HomeButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport EditDictionaryForm from './EditDictionaryForm';\nimport _ from 'lodash';\n\nconst mapStateToProps = (state, ownProps) => ({\n  dictionary: _.find(\n    state.dictionaries, { uid: ownProps.match.params.dictionaryid }\n  )\n});\n\nconst styles = theme => ({\n  newDictionaryButton: {\n    position: 'fixed',\n    bottom: '20px',\n    right: '20px'\n  }\n});\n\nconst DictionaryEditPage = ({ dictionary }) => {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <HomeButton />\n        <h1>Edit dictionary \"{dictionary.name}\"</h1>\n      </header>\n      <EditDictionaryForm dictionary={dictionary}></EditDictionaryForm>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(DictionaryEditPage));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = props => {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <h1>React Dictionary App</h1>\n      </header>\n      <div>\n        <h2>404 - Not found</h2>\n        <Link to=\"/\">Return to the home page</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport DictionariesListPage from './DictionariesListPage';\nimport DictionaryCreatePage from './DictionaryCreatePage';\nimport DictionaryViewPage from './DictionaryViewPage';\nimport DictionaryEditPage from './DictionaryEditPage';\nimport NotFoundPage from './NotFoundPage';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.classes = props.classes;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={DictionariesListPage} />\n          <Route exact path=\"/list/\" component={DictionariesListPage} />\n          <Route\n            exact\n            path=\"/create/\"\n            component={DictionaryCreatePage}\n          />\n          <Route\n            exact\n            path=\"/view/:dictionaryid\"\n            component={DictionaryViewPage}\n          />\n          <Route\n            exact\n            path=\"/edit/:dictionaryid\"\n            component={DictionaryEditPage}\n          />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from './App';\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </Provider>\n);\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport throttle from 'lodash/throttle';\nimport reducer from './reducers';\nimport { loadState, saveState } from './storage/localStorage.js'\nimport Root from './Root';\n\nimport './index.css';\n// import * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer,\n  loadState(),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n// persist store to LocalStorage\nstore.subscribe(throttle(() => {\n  saveState({\n    dictionaries: store.getState().dictionaries\n  });\n}, 1000));\n\nReactDOM.render(<Root store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    const state =  JSON.parse(serializedState);\n\n    // use Date objects\n    if (state.dictionaries && state.dictionaries.length > 0) {\n      // this is doesn't modify existing redux state so we can\n      // update in place\n      state.dictionaries = state.dictionaries.map(dictionary => {\n        dictionary.createdAt = new Date(dictionary.createdAt);\n        dictionary.lastModifiedAt = new Date(dictionary.lastModifiedAt);\n        return dictionary\n      })\n    }\n    return state;\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    // Ignore write errors.\n  }\n};"],"sourceRoot":""}